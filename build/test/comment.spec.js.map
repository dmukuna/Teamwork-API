{"version":3,"sources":["../../api/v1/test/comment.spec.js"],"names":["dotenv","config","process","env","NODE_ENV","save","User","deleteAllUsers","saveArticle","Article","deleteAllArticles","saveGif","Gif","deleteAllGifs","deleteAllComments","Comment","hashPassword","helper","generateToken","chai","use","chaiHttp","describe","id1","obj","sub","role","token","before","articleTitle","articleText","date","format","userValues","articleValues","gifTitle","gUrl","p_id","gifValues","after","it","comment1","comment","request","server","post","set","send","res","to","have","status","body","be","an","equals","comment2","comment3","comment4"],"mappings":"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","sourcesContent":["import chai, { expect } from 'chai';\nimport chaiHttp from 'chai-http';\nimport 'chai/register-should';\nimport dotenv from 'dotenv';\nimport moment from 'moment';\nimport uuidv1 from 'uuid/v1';\nimport server from '../server';\nimport Gif from '../models/gif';\nimport User from '../models/user';\nimport Article from '../models/article';\nimport Comment from '../models/comment';\nimport helper from '../controllers/helper';\n\ndotenv.config();\n\nprocess.env.NODE_ENV = 'test';\n\nconst { save, deleteAllUsers } = User;\nconst { saveArticle, deleteAllArticles } = Article;\nconst { saveGif, deleteAllGifs } = Gif;\nconst { deleteAllComments } = Comment;\n\nconst { hashPassword, generateToken} = helper;\n\nchai.use(chaiHttp);\n\ndescribe('comments', () => {\n  const id1 = uuidv1();\n  const obj = generateToken({ sub: id1, role: 'ADMIN' });\n  const token = `Bearer ${obj}`;\n  before(async () => {\n    const articleTitle = 'First test title';\n    const articleText = 'First test article test';\n    const date = moment().format('YYYY-MM-DD HH:mm:ss');\n\n    const userValues = [id1, 'Daniel', 'Mukuna', 'daniel@mukuna.com', hashPassword('DANIEL12345'), 'male', 'admin', 'I.T', 'thika'];\n    const articleValues = [1, articleTitle, articleText, date, id1];\n\n    const gifTitle = 'First gif test value';\n    const gUrl = 'http://res.cloudinary.com/mukuna/image/upload/v1574479438/teamwork-api-gifs/utvsco0pt6suogvzfbu9.gif';\n    const p_id = 'teamwork-api-gifs/utvsco0pt6suogvzfbu9';\n\n    const gifValues = [1, gifTitle, gUrl, p_id, date, id1];\n    await save(userValues);\n    await saveGif(gifValues);\n    await saveArticle(articleValues);\n  });\n\n  after(async () => {\n    await deleteAllComments();\n    await deleteAllGifs();\n    await deleteAllArticles();\n    await deleteAllUsers();\n  });\n\n  describe('POST /api/v1/articles/:articleID/comments', () => {\n    it('should create a new comment on the article', async () => {\n      const comment1 = {\n        comment: 'first article test comment'\n      };\n      const res = await chai.request(server)\n        .post('/api/v1/articles/1/comments')\n        .set('Authorization', token)\n        .set('Content-Type', 'application/json')\n        .send(comment1);\n        expect(res).to.have.status(201);\n        expect(res.body).to.be.an('Object');\n        expect(res.body.status).to.be.equals('success');\n    });\n\n    it('should fail if the comment field is empty', async () => {\n      const comment2 = {\n        comment: ''\n      };\n      const res = await chai.request(server)\n        .post('/api/v1/articles/1/comments')\n        .set('Authorization', token)\n        .set('Content-Type', 'application/json')\n        .send(comment2);\n        expect(res).to.have.status(400);\n        expect(res.body).to.be.an('Object');\n        expect(res.body.status).to.be.equals('error');\n    });\n  });\n\n  describe('POST /api/v1/gifs/:gifID/comments', () => {\n    it('should create a new comment on the gif', async () => {\n      const comment3 = {\n        comment: 'first gif image test comment'\n      };\n      const res = await chai.request(server)\n        .post('/api/v1/gifs/1/comments')\n        .set('Authorization', token)\n        .set('Content-Type', 'application/json')\n        .send(comment3);\n        expect(res).to.have.status(201);\n        expect(res.body).to.be.an('Object');\n        expect(res.body.status).to.be.equals('success');\n    });\n\n    it('should fail if the comment field is empty', async () => {\n      const comment4 = {\n        comment: ''\n      };\n      const res = await chai.request(server)\n        .post('/api/v1/gifs/1/comments')\n        .set('Authorization', token)\n        .set('Content-Type', 'application/json')\n        .send(comment4);\n        expect(res).to.have.status(400);\n        expect(res.body).to.be.an('Object');\n        expect(res.body.status).to.be.equals('error');\n    });\n  });\n});\n"],"file":"comment.spec.js"}