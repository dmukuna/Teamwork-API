{"version":3,"sources":["../../api/v1/test/article.spec.js"],"names":["dotenv","config","process","env","NODE_ENV","save","User","deleteAllUsers","deleteAllArticles","Article","saveArticle","hashPassword","helper","generateToken","chai","use","chaiHttp","describe","id1","obj","sub","role","token","before","articleTitle","articleText","date","format","userValues","articleValues","after","it","article1","title","article","request","server","post","set","send","res","to","have","status","body","data","be","an","equals","article2","article3","get","comments","article4","patch","article5"],"mappings":"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","sourcesContent":["import chai, { expect } from 'chai';\nimport chaiHttp from 'chai-http';\nimport 'chai/register-should';\nimport dotenv from 'dotenv';\nimport moment from 'moment';\nimport uuidv1 from 'uuid/v1';\nimport server from '../server';\nimport Article from '../models/article';\nimport User from '../models/user';\nimport helper from '../controllers/helper';\n\ndotenv.config();\n\nprocess.env.NODE_ENV = 'test';\n\nconst { save, deleteAllUsers } = User;\nconst { deleteAllArticles, saveArticle } = Article;\nconst { hashPassword, generateToken } = helper;\n\nchai.use(chaiHttp);\n\ndescribe('Articles', () => {\n  const id1 = uuidv1();\n  const obj = generateToken({ sub: id1, role: 'ADMIN' });\n  const token = `Bearer ${obj}`;\n  before(async () => {\n    const articleTitle = 'First test title';\n    const articleText = 'First test article test';\n    const date = moment().format('YYYY-MM-DD HH:mm:ss');\n    const userValues = [id1, 'Daniel', 'Mukuna', 'daniel@mukuna.com', hashPassword('DANIEL12345'), 'male', 'admin', 'I.T', 'thika'];\n    const articleValues = [1, articleTitle, articleText, date, id1];\n    await save(userValues);\n    await saveArticle(articleValues);\n  });\n\n  after(async () => {\n    await deleteAllArticles();\n    await deleteAllUsers();\n  });\n\n  describe('POST /api/v1/articles', () => {\n    it('should create a new article', async () => {\n      const article1 = {\n        title: 'first article',\n        article: 'first article text'\n      };\n      const res = await chai.request(server)\n        .post('/api/v1/articles')\n        .set('Authorization', token)\n        .set('Content-Type', 'application/json')\n        .send(article1);\n        expect(res).to.have.status(201);\n        expect(res.body.data).to.be.an('Object');\n        expect(res.body.status).to.be.equals('success');\n    });\n\n    it('should fail if the article body is blank', async () => {\n      const article2 = {\n        title: 'first article',\n        article: ''\n      };\n      const res = await chai.request(server)\n        .post('/api/v1/articles')\n        .set('Authorization', token)\n        .set('Content-Type', 'application/json')\n        .send(article2);\n        expect(res).to.have.status(400);\n        expect(res.body).to.be.an('Object');\n        expect(res.body.status).to.be.equals('error');\n    });\n\n    it('should fail if the article title is blank', async () => {\n      const article3 = {\n        title: '',\n        article: 'first article text'\n      };\n      const res = await chai.request(server)\n        .post('/api/v1/articles')\n        .set('Authorization', token)\n        .set('Content-Type', 'application/json')\n        .send(article3)\n        expect(res).to.have.status(400);\n        expect(res.body).to.be.an('Object');\n        expect(res.body.status).to.be.equals('error');\n    });\n  });\n\n  describe('GET /api/v1/articles', () => {\n    it('should fetch all articles', async () => {\n      const res = await chai.request(server)\n        .get('/api/v1/articles')\n        .set('Authorization', token);\n        expect(res).to.have.status(200);\n        expect(res.body.data).to.be.an('array');\n        expect(res.body.status).to.be.equals('success');\n    });\n  });\n\n  describe('GET /api/v1/articles/:articleID', () => {\n    it('should fetch get one article', async () => {\n      const res = await chai.request(server)\n        .get('/api/v1/articles/1')\n        .set('Authorization', token);\n        expect(res).to.have.status(200);\n        expect(res.body.data).to.be.an('Object');\n        expect(res.body.data.comments).to.be.an('array');\n        expect(res.body.status).to.be.equals('success');\n    });\n\n    it('should fail if article does not exist', async () => {\n      const res = await chai.request(server)\n        .get('/api/v1/articles/5')\n        .set('Authorization', token);\n        expect(res).to.have.status(500);\n        expect(res.body).to.be.an('Object');\n        expect(res.body.status).to.be.equals('error');\n    });\n  });\n\n  describe('PATCH /api/v1/articles/:articleID', () => {\n    it('should update an article', async () => {\n      const article4 = {\n        title: 'updated first article',\n        article: 'updated first article text'\n      };\n      const res = await chai.request(server)\n        .patch('/api/v1/articles/1')\n        .set('Authorization', token)\n        .set('Content-Type', 'application/json')\n        .send(article4);\n        expect(res).to.have.status(201);\n        expect(res.body.data).to.be.an('Object');\n        expect(res.body.status).to.be.equals('success');\n    });\n\n    it('should fail if article does not exist', async () => {\n      const article5 = {\n        title: 'updated first article',\n        article: 'updated first article text'\n      };\n      const res = await chai.request(server)\n        .patch('/api/v1/articles/5')\n        .set('Authorization', token)\n        .set('Content-Type', 'application/json')\n        .send(article5);\n        expect(res).to.have.status(500);\n        expect(res.body).to.be.an('Object');\n        expect(res.body.status).to.be.equals('error');\n    });\n  });\n\n  describe('DELETE /api/v1/articles/:articleId', () => {\n    it('should delete one article', async () => {\n      const res = await chai.request(server)\n        .delete('/api/v1/articles/1')\n        .set('Authorization', token);\n        expect(res).to.have.status(200);\n        expect(res.body.data).to.be.an('Object');\n        expect(res.body.status).to.be.equals('success');\n    });\n\n    it('should fail if article does not exist', async () => {\n      const res = await chai.request(server)\n        .delete('/api/v1/articles/6')\n        .set('Authorization', token);\n        expect(res).to.have.status(500);\n        expect(res.body).to.be.an('Object');\n        expect(res.body.status).to.be.equals('error');\n    });\n  });\n});\n"],"file":"article.spec.js"}