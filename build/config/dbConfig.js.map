{"version":3,"sources":["../../api/v1/config/dbConfig.js"],"names":["dotenv","config","isProduction","process","env","NODE_ENV","isDevelopment","conn","DATABASE_URL","DB_USER","DB_PASSWORD","DB_HOST","DB_PORT","DB_DATABASE","DB_USER_TEST","DB_PASSWORD_TEST","DB_DATABASE_TEST","pool","Pool","connectionString","on","err","client","release","console","error","exit"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEAA,mBAAOC,MAAP;;AAEA,IAAMC,YAAY,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA9C;AACA,IAAMC,aAAa,GAAGH,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA/C;AACA,IAAIE,IAAJ;;AAEA,IAAIL,YAAJ,EAAkB;AAChBK,EAAAA,IAAI,GAAGJ,OAAO,CAACC,GAAR,CAAYI,YAAnB;AACD,CAFD,MAEO,IAAIF,aAAJ,EAAmB;AACxBC,EAAAA,IAAI,0BAAmBJ,OAAO,CAACC,GAAR,CAAYK,OAA/B,cAA0CN,OAAO,CAACC,GAAR,CAAYM,WAAtD,cAAqEP,OAAO,CAACC,GAAR,CAAYO,OAAjF,cAA4FR,OAAO,CAACC,GAAR,CAAYQ,OAAxG,cAAmHT,OAAO,CAACC,GAAR,CAAYS,WAA/H,CAAJ;AACD,CAFM,MAEA;AACLN,EAAAA,IAAI,0BAAmBJ,OAAO,CAACC,GAAR,CAAYU,YAA/B,cAA+CX,OAAO,CAACC,GAAR,CAAYW,gBAA3D,cAA+EZ,OAAO,CAACC,GAAR,CAAYO,OAA3F,cAAsGR,OAAO,CAACC,GAAR,CAAYQ,OAAlH,cAA6HT,OAAO,CAACC,GAAR,CAAYY,gBAAzI,CAAJ;AACD;;AAED,IAAMC,IAAI,GAAG,IAAIC,QAAJ,CAAS;AACpBC,EAAAA,gBAAgB,EAAEZ;AADE,CAAT,CAAb;AAIAU,IAAI,CAACG,EAAL,CAAQ,OAAR,EAAiB,UAACC,GAAD,EAAMC,MAAN,EAAiB;AAChCA,EAAAA,MAAM,CAACC,OAAP;AACAC,EAAAA,OAAO,CAACC,KAAR,CAAc,iCAAd,EAAiDJ,GAAjD;AACAlB,EAAAA,OAAO,CAACuB,IAAR,CAAa,CAAC,CAAd;AACD,CAJD;eAMeT,I","sourcesContent":["import { Pool } from 'pg';\r\nimport dotenv from 'dotenv';\r\n\r\ndotenv.config();\r\n\r\nconst isProduction = process.env.NODE_ENV === 'production';\r\nconst isDevelopment = process.env.NODE_ENV === 'development';\r\nlet conn;\r\n\r\nif (isProduction) {\r\n  conn = process.env.DATABASE_URL;\r\n} else if (isDevelopment) {\r\n  conn = `postgresql://${process.env.DB_USER}:${process.env.DB_PASSWORD}@${process.env.DB_HOST}:${process.env.DB_PORT}/${process.env.DB_DATABASE}`;\r\n} else {\r\n  conn = `postgresql://${process.env.DB_USER_TEST}:${process.env.DB_PASSWORD_TEST}@${process.env.DB_HOST}:${process.env.DB_PORT}/${process.env.DB_DATABASE_TEST}`;\r\n}\r\n\r\nconst pool = new Pool({\r\n  connectionString: conn,\r\n});\r\n\r\npool.on('error', (err, client) => {\r\n  client.release();\r\n  console.error('Unexpected error on idle client', err);\r\n  process.exit(-1);\r\n});\r\n\r\nexport default pool;\r\n"],"file":"dbConfig.js"}