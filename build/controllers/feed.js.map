{"version":3,"sources":["../../api/v1/controllers/feed.js"],"names":["findAllGifs","gif","findAllArticles","artcl","compareDates","hpr","getPosts","req","res","next","gifArr","articleArr","then","gifRows","forEach","row","id","title","gifurl","createdon","authorid","gifId","gifTitle","gifCreatedOn","gifAuthorId","values","Id","URL","authorId","push","articleRows","article","articleId","articleTitle","articleCreatedOn","articleAuthorId","articleText","length","status","json","Error","feedArr","sortedArr","sort","posts","data"],"mappings":"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","sourcesContent":["import gif from '../models/gif';\r\nimport artcl from '../models/article';\r\nimport hpr from './helper';\r\n\r\nconst { findAllGifs } = gif;\r\nconst { findAllArticles } = artcl;\r\nconst { compareDates } = hpr;\r\n\r\nconst getPosts = (req, res, next) => {\r\n  const gifArr = [];\r\n  const articleArr = [];\r\n  findAllGifs()\r\n    .then((gifRows) => {\r\n      gifRows.forEach((row) => {\r\n        const {\r\n          id, title, gifurl, createdon, authorid,\r\n        } = row;\r\n        const gifId = id;\r\n        const gifTitle = title;\r\n        const gifCreatedOn = createdon;\r\n        const gifAuthorId = authorid;\r\n\r\n        const values = {\r\n          Id: gifId,\r\n          createdon: gifCreatedOn,\r\n          title: gifTitle,\r\n          URL: gifurl,\r\n          authorId: gifAuthorId,\r\n        };\r\n        gifArr.push(values);\r\n      });\r\n\r\n      findAllArticles()\r\n        .then((articleRows) => {\r\n          articleRows.forEach((row) => {\r\n            const {\r\n              id, title, article, createdon, authorid,\r\n            } = row;\r\n            const articleId = id;\r\n            const articleTitle = title;\r\n            const articleCreatedOn = createdon;\r\n            const articleAuthorId = authorid;\r\n            const articleText = article;\r\n\r\n            const values = {\r\n              id: articleId,\r\n              createdon: articleCreatedOn,\r\n              title: articleTitle,\r\n              article: articleText,\r\n              authorId: articleAuthorId,\r\n            };\r\n            articleArr.push(values);\r\n          });\r\n\r\n          if (gifArr.length === 0 && articleArr.length === 0) {\r\n            res.status(400).json({\r\n              status: 'error',\r\n              Error: 'There is no post yet',\r\n            });\r\n          } else {\r\n            const feedArr = [...gifArr, ...articleArr];\r\n            const sortedArr = feedArr.sort(compareDates('createdon', 'desc'));\r\n            const posts = [...sortedArr];\r\n\r\n            res.status(200).json({\r\n              status: 'success',\r\n              data: posts,\r\n            });\r\n          }\r\n        })\r\n        .catch(() => {\r\n          res.status(500).json({\r\n            status: 'error',\r\n            Error: 'Failed to get Articles',\r\n          });\r\n        });\r\n    })\r\n    .catch(() => {\r\n      res.status(500).json({\r\n        status: 'error',\r\n        Error: 'Failed to get GIF images',\r\n      });\r\n    });\r\n};\r\n\r\nexport default getPosts;\r\n"],"file":"feed.js"}