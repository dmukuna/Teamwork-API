{"version":3,"sources":["../../api/v1/controllers/helper.js"],"names":["dotenv","config","Helper","hashPassword","password","bcrypt","hashSync","genSaltSync","comparePassword","hashedPassword","compareSync","isValidEmail","email","test","generateToken","userObj","token","jwt","sign","process","env","SECRET","expiresIn","compareDates","key","order","a","b","hasKeyProperty","Object","prototype","hasOwnProperty","call","comparison","varB","format","isAfter","isBefore"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEAA,mBAAOC,MAAP;;AAEA,IAAMC,MAAM,GAAG;AACb;;;;;AAKAC,EAAAA,YANa,wBAMAC,QANA,EAMU;AACrB,WAAOC,mBAAOC,QAAP,CAAgBF,QAAhB,EAA0BC,mBAAOE,WAAP,CAAmB,EAAnB,CAA1B,CAAP;AACD,GARY;;AASb;;;;;;AAMAC,EAAAA,eAfa,2BAeGJ,QAfH,EAeaK,cAfb,EAe6B;AACxC,WAAOJ,mBAAOK,WAAP,CAAmBN,QAAnB,EAA6BK,cAA7B,CAAP;AACD,GAjBY;;AAkBb;;;;;AAKAE,EAAAA,YAvBa,wBAuBAC,KAvBA,EAuBO;AAClB,WAAO,eAAeC,IAAf,CAAoBD,KAApB,CAAP;AACD,GAzBY;;AA0Bb;;;;;AAKAE,EAAAA,aA/Ba,yBA+BCC,OA/BD,EA+BU;AACrB,QAAMC,KAAK,GAAGC,yBAAIC,IAAJ,CAASH,OAAT,EAAkBI,OAAO,CAACC,GAAR,CAAYC,MAA9B,EAAsC;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAtC,CAAd;;AACA,WAAON,KAAP;AACD,GAlCY;AAoCbO,EAAAA,YApCa,wBAoCAC,GApCA,EAoCoB;AAAA,QAAfC,KAAe,uEAAP,KAAO;AAC/B,WAAO,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACf,UAAMC,cAAc,GAAGC,MAAM,CAACC,SAAP,CAAiBC,cAAxC;;AACA,UAAI,CAACH,cAAc,CAACI,IAAf,CAAoBN,CAApB,EAAuBF,GAAvB,CAAD,IAAgC,CAACI,cAAc,CAACI,IAAf,CAAoBL,CAApB,EAAuBH,GAAvB,CAArC,EAAkE;AAChE,eAAO,CAAP;AACD;;AAED,UAAIS,UAAU,GAAG,CAAjB;AAEA,UAAMC,IAAI,GAAG,wBAAOP,CAAC,CAACH,GAAD,CAAR,EAAeW,MAAf,CAAsB,qBAAtB,CAAb;;AAEA,UAAI,wBAAOT,CAAC,CAACF,GAAD,CAAR,EAAeY,OAAf,CAAuBF,IAAvB,CAAJ,EAAkC;AAChCD,QAAAA,UAAU,GAAG,CAAb;AACD,OAFD,MAEO,IAAI,wBAAOP,CAAC,CAACF,GAAD,CAAR,EAAea,QAAf,CAAwBH,IAAxB,CAAJ,EAAmC;AACxCD,QAAAA,UAAU,GAAG,CAAC,CAAd;AACD;;AAED,aACGR,KAAK,KAAK,MAAX,GACKQ,UAAU,GAAG,CAAC,CADnB,GACwBA,UAF1B;AAID,KApBD;AAqBD;AA1DY,CAAf;eA6De/B,M","sourcesContent":["import bcrypt from 'bcrypt';\r\nimport jwt from 'jsonwebtoken';\r\nimport dotenv from 'dotenv';\r\nimport moment from 'moment';\r\n\r\ndotenv.config();\r\n\r\nconst Helper = {\r\n  /**\r\n   * Hash Password Method\r\n   * @param {string} password\r\n   * @returns {string} returns hashed password\r\n   */\r\n  hashPassword(password) {\r\n    return bcrypt.hashSync(password, bcrypt.genSaltSync(10));\r\n  },\r\n  /**\r\n   * comparePassword\r\n   * @param {string} hashPassword\r\n   * @param {string} password\r\n   * @returns {Boolean} return True or False\r\n   */\r\n  comparePassword(password, hashedPassword) {\r\n    return bcrypt.compareSync(password, hashedPassword);\r\n  },\r\n  /**\r\n   * isValidEmail helper method\r\n   * @param {string} email\r\n   * @returns {Boolean} True or False\r\n   */\r\n  isValidEmail(email) {\r\n    return /\\S+@\\S+\\.\\S+/.test(email);\r\n  },\r\n  /**\r\n   * Gnerate Token\r\n   * @param {string} id\r\n   * @returns {string} token\r\n   */\r\n  generateToken(userObj) {\r\n    const token = jwt.sign(userObj, process.env.SECRET, { expiresIn: '7d' });\r\n    return token;\r\n  },\r\n\r\n  compareDates(key, order = 'asc') {\r\n    return (a, b) => {\r\n      const hasKeyProperty = Object.prototype.hasOwnProperty;\r\n      if (!hasKeyProperty.call(a, key) || !hasKeyProperty.call(b, key)) {\r\n        return 0;\r\n      }\r\n\r\n      let comparison = 0;\r\n\r\n      const varB = moment(b[key]).format('YYYY-MM-DD HH:mm:ss');\r\n\r\n      if (moment(a[key]).isAfter(varB)) {\r\n        comparison = 1;\r\n      } else if (moment(a[key]).isBefore(varB)) {\r\n        comparison = -1;\r\n      }\r\n\r\n      return (\r\n        (order === 'desc')\r\n          ? (comparison * -1) : comparison\r\n      );\r\n    };\r\n  },\r\n};\r\n\r\nexport default Helper;\r\n"],"file":"helper.js"}