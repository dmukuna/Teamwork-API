{"version":3,"sources":["../../api/v1/controllers/article.js"],"names":["findOneArticle","artcl","findAllArticles","updateArticle","saveArticle","deleteArticle","findArticleComments","comnt","createArticleController","req","res","next","checkFields","body","article","title","status","json","error","then","rows","authorId","user","sub","articleCreatedOn","format","articleId","Math","max","map","row","id","articleTitle","values","data","message","createdOn","userId","getArticlesController","length","articlesArr","forEach","a","articleText","push","getArticleController","params","paramId","parseInt","createdon","authorid","articleAuthorId","commentArr","commentRow","comment","commentText","commentAuthorId","commentId","comments","updateArticleController","deleteArticleController","Id"],"mappings":"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","sourcesContent":["import moment from 'moment';\r\nimport artcl from '../models/article';\r\nimport comnt from '../models/comment';\r\n\r\nconst {\r\n  findOneArticle, findAllArticles, updateArticle, saveArticle, deleteArticle,\r\n} = artcl;\r\nconst { findArticleComments } = comnt;\r\n\r\nconst createArticleController = (req, res, next) => {\r\n  const checkFields = !req.body.article || !req.body.title || req.body.title === '' || req.body.article === '';\r\n  if (checkFields) {\r\n    res.status(400).json({\r\n      status: 'error',\r\n      error: 'Title and Article text are required',\r\n    });\r\n  } else {\r\n    findAllArticles()\r\n      .then((rows) => {\r\n        const { title, article } = req.body;\r\n        const authorId = req.user.sub;\r\n        const articleCreatedOn = moment().format('YYYY-MM-DD HH:mm:ss');\r\n        const articleId = Math.max(...rows.map(row => row.id + 1), 1);\r\n\r\n        const articleTitle = title;\r\n\r\n        const values = [articleId, title, article, articleCreatedOn, authorId];\r\n\r\n        saveArticle(values)\r\n          .then(() => {\r\n            res.status(201).json({\r\n              status: 'success',\r\n              data: {\r\n                id: articleId,\r\n                message: 'Article successfully posted',\r\n                createdOn: articleCreatedOn,\r\n                title: articleTitle,\r\n                userId: authorId,\r\n              },\r\n            });\r\n          })\r\n          .catch(() => {\r\n            res.status(500).json({\r\n              status: 'error',\r\n              error: 'Failed to save article',\r\n            });\r\n          });\r\n      })\r\n      .catch(() => {\r\n        res.status(500).json({\r\n          status: 'error',\r\n          error: 'Failed to get articles',\r\n        });\r\n      });\r\n  }\r\n};\r\n\r\nconst getArticlesController = (req, res, next) => {\r\n  findAllArticles()\r\n    .then((rows) => {\r\n      if (rows.length === 0) {\r\n        res.status(400).json({\r\n          status: 'error',\r\n          error: 'There is no Article post yet',\r\n        });\r\n      } else {\r\n        const articlesArr = [];\r\n        rows.forEach((a) => {\r\n          const {\r\n            id, title, article, createdOn, authorId,\r\n          } = a;\r\n          const articleId = id;\r\n          const articleTitle = title;\r\n          const articleText = article;\r\n          const articleCreatedOn = createdOn;\r\n\r\n          const values = {\r\n            id: articleId,\r\n            title: articleTitle,\r\n            article: articleText,\r\n            createdOn: articleCreatedOn,\r\n            userId: authorId,\r\n          };\r\n          articlesArr.push(values);\r\n        });\r\n        res.status(200).json({\r\n          status: 'success',\r\n          data: articlesArr,\r\n        });\r\n      }\r\n    })\r\n    .catch(() => {\r\n      res.status(500).json({\r\n        status: 'error',\r\n        error: 'Failed to get articles',\r\n      });\r\n    });\r\n};\r\n\r\nconst getArticleController = (req, res, next) => {\r\n  if (!req.params.articleId || req.params.articleId === '') {\r\n    res.status(400).json({\r\n      status: 'error',\r\n      error: 'Invalid request',\r\n    });\r\n  } else {\r\n    const paramId = parseInt(req.params.articleId, 10);\r\n\r\n    findOneArticle([paramId])\r\n      .then((row) => {\r\n        if (row.length === 0){\r\n          res.status(400).json({\r\n            status: 'error',\r\n            error: 'Invalid request',\r\n          });\r\n        } else {\r\n          const {\r\n            id, title, article, createdon, authorid,\r\n          } = row;\r\n          const articleId = id;\r\n          const articleTitle = title;\r\n          const articleText = article;\r\n          const articleCreatedOn = createdon;\r\n          const articleAuthorId = authorid;\r\n  \r\n          findArticleComments([paramId])\r\n            .then((rows) => {\r\n              const commentArr = [];\r\n              rows.forEach((commentRow) => {\r\n                const { comment } = commentRow;\r\n                const commentText = comment;\r\n                const commentAuthorId = commentRow.authorid;\r\n  \r\n                const values = {\r\n                  commentId: commentRow.id,\r\n                  comment: commentText,\r\n                  authorId: commentAuthorId,\r\n                };\r\n                commentArr.push(values);\r\n              });\r\n              res.status(200).json({\r\n                status: 'success',\r\n                data: {\r\n                  id: articleId,\r\n                  createdOn: articleCreatedOn,\r\n                  title: articleTitle,\r\n                  article: articleText,\r\n                  authorId: articleAuthorId,\r\n                  comments: commentArr,\r\n                },\r\n              });\r\n            })\r\n            .catch(() => {\r\n              res.status(500).json({\r\n                status: 'error',\r\n                error: 'Failed to get article comments',\r\n              });\r\n            });\r\n        }\r\n      })\r\n      .catch(() => {\r\n        res.status(500).json({\r\n          status: 'error',\r\n          error: 'Failed to get article',\r\n        });\r\n      });\r\n  }\r\n};\r\n\r\nconst updateArticleController = (req, res, next) => {\r\n  const checkFields = !req.params.articleId || !req.body.article || !req.body.title || req.params.articleId === ''\r\n  || req.body.article === '' || req.body.title === '';\r\n  if (checkFields) {\r\n    res.status(400).json({\r\n      status: 'error',\r\n      error: 'Title and article fields are required',\r\n    });\r\n  } else {\r\n    const paramId = parseInt(req.params.articleId, 10);\r\n    findOneArticle([paramId])\r\n      .then((row) => {\r\n        if (row.length === 0) {\r\n          res.status(400).json({\r\n            status: 'error',\r\n            error: 'Article does not exist',\r\n          });\r\n        } else {\r\n          updateArticle([req.body.title, req.body.article, paramId])\r\n        .then((row) => {\r\n          const {\r\n            id, title, article, createdon, authorid,\r\n          } = row;\r\n          const articleId = id;\r\n          const articleTitle = title;\r\n          const articleText = article;\r\n          const articleCreatedOn = createdon;\r\n  \r\n          res.status(201).json({\r\n            status: 'success',\r\n            data: {\r\n              id: articleId,\r\n              title: articleTitle,\r\n              article: articleText,\r\n              createdOn: articleCreatedOn,\r\n              userId: authorid,\r\n            },\r\n          });\r\n        })\r\n        .catch(() => {\r\n          res.status(500).json({\r\n            status: 'error',\r\n            error: 'Failed to update article',\r\n          });\r\n        });\r\n        }\r\n      })\r\n      .catch(() =>{\r\n        res.status(500).json({\r\n          status: 'error',\r\n          error: 'Failed to get article',\r\n        });\r\n      });\r\n  }\r\n};\r\n\r\nconst deleteArticleController = (req, res, next) => {\r\n  if (!req.params.articleId || req.params.articleId === '') {\r\n    res.status(400).json({\r\n      status: 'error',\r\n      error: 'Invalid request',\r\n    });\r\n  } else {\r\n    const articleId = parseInt(req.params.articleId, 10);\r\n\r\n    findOneArticle([articleId])\r\n      .then((row) => {\r\n        if (row.length === 0) {\r\n          res.status(400).json({\r\n            status: 'error',\r\n            error: 'Invalid request',\r\n          });\r\n        } else {deleteArticle([articleId])\r\n          .then((row) => {\r\n            const {\r\n              id, title, article, createdon, authorid,\r\n            } = row;\r\n    \r\n            const articleTitle = title;\r\n            const articleText = article;\r\n            const articleCreatedOn = createdon;\r\n            const userId = authorid;\r\n    \r\n            res.status(200).json({\r\n              status: 'success',\r\n              data: {\r\n                message: 'Article successfully deleted',\r\n                Id: id,\r\n                title: articleTitle,\r\n                article: articleText,\r\n                createdOn: articleCreatedOn,\r\n                authorId: userId,\r\n              },\r\n            });\r\n          })\r\n          .catch(() => {\r\n            res.status(500).json({\r\n              status: 'error',\r\n              error: 'Failed to delete article',\r\n            });\r\n          });}\r\n      })\r\n      .catch(() => {\r\n        res.status(500).json({\r\n          status: 'error',\r\n          error: 'Failed to get article',\r\n        });\r\n      })\r\n  }\r\n};\r\n\r\nexport {\r\n  createArticleController,\r\n  getArticlesController,\r\n  getArticleController,\r\n  updateArticleController,\r\n  deleteArticleController,\r\n};"],"file":"article.js"}