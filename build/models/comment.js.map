{"version":3,"sources":["../../api/v1/models/comment.js"],"names":["query","db","Comment","findOneComment","value","queryText","row","then","res","rows","err","findAllComments","findArticleComments","findGifComments","saveGifComment","values","saveArticleComment","deleteComment","deleteAllComments"],"mappings":";;;;;;;;;AAAA;;IAEQA,K,GAAUC,iB,CAAVD,K;AAER,IAAME,OAAO,GAAG;AACdC,EAAAA,cADc,0BACCC,KADD,EACQ;AACpB,QAAMC,SAAS,GAAG,oCAAlB;AACA,QAAMC,GAAG,GAAGN,KAAK,CAACK,SAAD,EAAYD,KAAZ,CAAL,CACTG,IADS,CACJ,UAACC,GAAD;AAAA,aAASA,GAAG,CAACC,IAAJ,CAAS,CAAT,CAAT;AAAA,KADI,WAEH,UAACC,GAAD,EAAS;AACd,YAAMA,GAAN;AACD,KAJS,CAAZ;AAKA,WAAOJ,GAAP;AACD,GATa;AAWdK,EAAAA,eAXc,6BAWI;AAChB,QAAMN,SAAS,GAAG,wBAAlB;AACA,QAAMI,IAAI,GAAGT,KAAK,CAACK,SAAD,EAAY,EAAZ,CAAL,CACVE,IADU,CACL,UAACC,GAAD;AAAA,aAASA,GAAG,CAACC,IAAb;AAAA,KADK,WAEJ,UAACC,GAAD,EAAS;AACd,YAAMA,GAAN;AACD,KAJU,CAAb;AAKA,WAAOD,IAAP;AACD,GAnBa;AAqBdG,EAAAA,mBArBc,+BAqBMR,KArBN,EAqBa;AACzB,QAAMC,SAAS,GAAG,2CAAlB;AACA,QAAMI,IAAI,GAAGT,KAAK,CAACK,SAAD,EAAYD,KAAZ,CAAL,CACVG,IADU,CACL,UAACC,GAAD;AAAA,aAASA,GAAG,CAACC,IAAb;AAAA,KADK,WAEJ,UAACC,GAAD,EAAS;AACd,YAAMA,GAAN;AACD,KAJU,CAAb;AAKA,WAAOD,IAAP;AACD,GA7Ba;AA+BdI,EAAAA,eA/Bc,2BA+BET,KA/BF,EA+BS;AACrB,QAAMC,SAAS,GAAG,uCAAlB;AACA,QAAMI,IAAI,GAAGT,KAAK,CAACK,SAAD,EAAYD,KAAZ,CAAL,CACVG,IADU,CACL,UAACC,GAAD;AAAA,aAASA,GAAG,CAACC,IAAb;AAAA,KADK,WAEJ,UAACC,GAAD,EAAS;AACd,YAAMA,GAAN;AACD,KAJU,CAAb;AAKA,WAAOD,IAAP;AACD,GAvCa;AAyCdK,EAAAA,cAzCc,0BAyCCC,MAzCD,EAyCS;AACrB,QAAMV,SAAS,6GAAf;AAGA,QAAMC,GAAG,GAAGN,KAAK,CAACK,SAAD,EAAYU,MAAZ,CAAL,CACTR,IADS,CACJ,UAACC,GAAD;AAAA,aAASA,GAAT;AAAA,KADI,WAEH,UAACE,GAAD,EAAS;AACd,YAAMA,GAAN;AACD,KAJS,CAAZ;AAKA,WAAOJ,GAAP;AACD,GAnDa;AAqDdU,EAAAA,kBArDc,8BAqDKD,MArDL,EAqDa;AACzB,QAAMV,SAAS,iHAAf;AAGA,QAAMC,GAAG,GAAGN,KAAK,CAACK,SAAD,EAAYU,MAAZ,CAAL,CACTR,IADS,CACJ,UAACC,GAAD;AAAA,aAASA,GAAG,CAACC,IAAJ,CAAS,CAAT,CAAT;AAAA,KADI,WAEH,UAACC,GAAD,EAAS;AACd,YAAMA,GAAN;AACD,KAJS,CAAZ;AAKA,WAAOJ,GAAP;AACD,GA/Da;AAiEdW,EAAAA,aAjEc,yBAiEAb,KAjEA,EAiEO;AACnB,QAAMC,SAAS,GAAG,8CAAlB;AACA,QAAMC,GAAG,GAAGN,KAAK,CAACK,SAAD,EAAYD,KAAZ,CAAL,CACTG,IADS,CACJ,UAACC,GAAD;AAAA,aAASA,GAAG,CAACC,IAAJ,CAAS,CAAT,CAAT;AAAA,KADI,WAEH,UAACC,GAAD,EAAS;AACd,YAAMA,GAAN;AACD,KAJS,CAAZ;AAKA,WAAOJ,GAAP;AACD,GAzEa;AA2EdY,EAAAA,iBA3Ec,+BA2EM;AAClB,QAAMb,SAAS,GAAG,kCAAlB;AACA,QAAMI,IAAI,GAAGT,KAAK,CAACK,SAAD,EAAY,EAAZ,CAAL,CACVE,IADU,CACL,UAACC,GAAD;AAAA,aAASA,GAAG,CAACC,IAAb;AAAA,KADK,WAEJ,UAACC,GAAD,EAAS;AACd,YAAMA,GAAN;AACD,KAJU,CAAb;AAKA,WAAOD,IAAP;AACD;AAnFa,CAAhB;eAsFeP,O","sourcesContent":["import db from './index';\r\n\r\nconst { query } = db;\r\n\r\nconst Comment = {\r\n  findOneComment(value) {\r\n    const queryText = 'SELECT * FROM comments WHERE ID=$1';\r\n    const row = query(queryText, value)\r\n      .then((res) => res.rows[0])\r\n      .catch((err) => {\r\n        throw err;\r\n      });\r\n    return row;\r\n  },\r\n\r\n  findAllComments() {\r\n    const queryText = 'SELECT * FROM comments';\r\n    const rows = query(queryText, [])\r\n      .then((res) => res.rows)\r\n      .catch((err) => {\r\n        throw err;\r\n      });\r\n    return rows;\r\n  },\r\n\r\n  findArticleComments(value) {\r\n    const queryText = 'SELECT * FROM comments WHERE articleId=$1';\r\n    const rows = query(queryText, value)\r\n      .then((res) => res.rows)\r\n      .catch((err) => {\r\n        throw err;\r\n      });\r\n    return rows;\r\n  },\r\n\r\n  findGifComments(value) {\r\n    const queryText = 'SELECT * FROM comments WHERE gifid=$1';\r\n    const rows = query(queryText, value)\r\n      .then((res) => res.rows)\r\n      .catch((err) => {\r\n        throw err;\r\n      });\r\n    return rows;\r\n  },\r\n\r\n  saveGifComment(values) {\r\n    const queryText = `INSERT INTO\r\n      comments (id, comment, createdon, authorid, gifid)\r\n      VALUES ($1, $2, $3, $4, $5)`;\r\n    const row = query(queryText, values)\r\n      .then((res) => res)\r\n      .catch((err) => {\r\n        throw err;\r\n      });\r\n    return row;\r\n  },\r\n\r\n  saveArticleComment(values) {\r\n    const queryText = `INSERT INTO\r\n      comments (id, comment, createdon, authorid, articleid)\r\n      VALUES ($1, $2, $3, $4, $5)`;\r\n    const row = query(queryText, values)\r\n      .then((res) => res.rows[0])\r\n      .catch((err) => {\r\n        throw err;\r\n      });\r\n    return row;\r\n  },\r\n\r\n  deleteComment(value) {\r\n    const queryText = 'DELETE FROM comments WHERE ID=$1 RETURNING *';\r\n    const row = query(queryText, value)\r\n      .then((res) => res.rows[0])\r\n      .catch((err) => {\r\n        throw err;\r\n      });\r\n    return row;\r\n  },\r\n\r\n  deleteAllComments() {\r\n    const queryText = 'DELETE FROM comments RETURNING *';\r\n    const rows = query(queryText, [])\r\n      .then((res) => res.rows)\r\n      .catch((err) => {\r\n        throw err;\r\n      });\r\n    return rows;\r\n  },\r\n};\r\n\r\nexport default Comment;\r\n"],"file":"comment.js"}