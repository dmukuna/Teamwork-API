{"version":3,"sources":["../../api/v1/models/gif.js"],"names":["query","queries","Gif","findOneGif","value","queryText","row","then","res","rows","err","findAllGifs","saveGif","values","deleteGif","deleteAllGifs"],"mappings":";;;;;;;;;AAAA;;IAEQA,K,GAAUC,iB,CAAVD,K;AAER,IAAME,GAAG,GAAG;AACVC,EAAAA,UADU,sBACCC,KADD,EACQ;AAChB,QAAMC,SAAS,GAAG,gCAAlB;AACA,QAAMC,GAAG,GAAGN,KAAK,CAACK,SAAD,EAAYD,KAAZ,CAAL,CACTG,IADS,CACJ,UAACC,GAAD;AAAA,aAASA,GAAG,CAACC,IAAJ,CAAS,CAAT,CAAT;AAAA,KADI,WAEH,UAACC,GAAD,EAAS;AACd,YAAMA,GAAN;AACD,KAJS,CAAZ;AAKA,WAAOJ,GAAP;AACD,GATS;AAWVK,EAAAA,WAXU,yBAWI;AACZ,QAAMN,SAAS,GAAG,oBAAlB;AACA,QAAMI,IAAI,GAAGT,KAAK,CAACK,SAAD,EAAY,EAAZ,CAAL,CACVE,IADU,CACL,UAACC,GAAD;AAAA,aAASA,GAAG,CAACC,IAAb;AAAA,KADK,WAEJ,UAACC,GAAD,EAAS;AACd,YAAMA,GAAN;AACD,KAJU,CAAb;AAKA,WAAOD,IAAP;AACD,GAnBS;AAqBVG,EAAAA,OArBU,mBAqBFC,MArBE,EAqBM;AACd,QAAMR,SAAS,yHAAf;AAGA,WAAOL,KAAK,CAACK,SAAD,EAAYQ,MAAZ,CAAZ;AACD,GA1BS;AA4BVC,EAAAA,SA5BU,qBA4BAV,KA5BA,EA4BO;AACf,QAAMC,SAAS,GAAG,0CAAlB;AACA,QAAMC,GAAG,GAAGN,KAAK,CAACK,SAAD,EAAYD,KAAZ,CAAL,CACTG,IADS,CACJ,UAACC,GAAD;AAAA,aAASA,GAAG,CAACC,IAAJ,CAAS,CAAT,CAAT;AAAA,KADI,WAEH,UAACC,GAAD,EAAS;AACd,YAAMA,GAAN;AACD,KAJS,CAAZ;AAKA,WAAOJ,GAAP;AACD,GApCS;AAsCVS,EAAAA,aAtCU,2BAsCM;AACd,QAAMV,SAAS,GAAG,8BAAlB;AACA,QAAMI,IAAI,GAAGT,KAAK,CAACK,SAAD,EAAY,EAAZ,CAAL,CACVE,IADU,CACL,UAACC,GAAD;AAAA,aAASA,GAAG,CAACC,IAAb;AAAA,KADK,WAEJ,UAACC,GAAD,EAAS;AACd,YAAMA,GAAN;AACD,KAJU,CAAb;AAKA,WAAOD,IAAP;AACD;AA9CS,CAAZ;eAkDeP,G","sourcesContent":["import queries from './index';\r\n\r\nconst { query } = queries;\r\n\r\nconst Gif = {\r\n  findOneGif(value) {\r\n    const queryText = 'SELECT * FROM gifs WHERE ID=$1';\r\n    const row = query(queryText, value)\r\n      .then((res) => res.rows[0])\r\n      .catch((err) => {\r\n        throw err;\r\n      });\r\n    return row;\r\n  },\r\n\r\n  findAllGifs() {\r\n    const queryText = 'SELECT * FROM gifs';\r\n    const rows = query(queryText, [])\r\n      .then((res) => res.rows)\r\n      .catch((err) => {\r\n        throw err;\r\n      });\r\n    return rows;\r\n  },\r\n\r\n  saveGif(values) {\r\n    const queryText = `INSERT INTO\r\n      gifs (id, title, gifurl, gifpublicid, createdon, authorid)\r\n      VALUES ($1, $2, $3, $4, $5, $6)`;\r\n    return query(queryText, values);\r\n  },\r\n\r\n  deleteGif(value) {\r\n    const queryText = 'DELETE FROM gifs WHERE ID=$1 RETURNING *';\r\n    const row = query(queryText, value)\r\n      .then((res) => res.rows[0])\r\n      .catch((err) => {\r\n        throw err;\r\n      });\r\n    return row;\r\n  },\r\n\r\n  deleteAllGifs() {\r\n    const queryText = 'DELETE FROM gifs RETURNING *';\r\n    const rows = query(queryText, [])\r\n      .then((res) => res.rows)\r\n      .catch((err) => {\r\n        throw err;\r\n      });\r\n    return rows;    \r\n  },\r\n};\r\n\r\n\r\nexport default Gif;\r\n"],"file":"gif.js"}